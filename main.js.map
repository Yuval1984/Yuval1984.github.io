{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/store/list-store.component.css","webpack:///./src/app/store/list-store.component.html","webpack:///./src/app/store/list-store.component.ts","webpack:///./src/app/store/mystore.component.css","webpack:///./src/app/store/mystore.component.html","webpack:///./src/app/store/mystore.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-list-store></app-list-store>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'StoreSite';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { MystoreComponent } from './store/mystore.component';\nimport { FormsModule } from '@angular/forms';\nimport { ListStoreComponent } from './store/list-store.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MystoreComponent,\n    ListStoreComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"      <div class=\\\"split left\\\">\\n        <div class=\\\"panel panel-primary\\\">\\n                      <div class=\\\"panel-heading\\\" id=\\\"grad1\\\">\\n                          <h2 class=\\\"panel-title\\\">My Store</h2>\\n                            <button class=\\\"btn\\\" id=\\\"addbutton\\\">\\n                                      <i class=\\\"fa fa-plus\\\"></i> Add\\n                            </button>\\n                        <div class=\\\"nav\\\">\\n                            <div class=\\\"search-container\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"searching\\\" placeholder=\\\"Search Products\\\" name=\\\"search\\\">\\n                                <button type=\\\"submit\\\" (click)=\\\"search()\\\">\\n                                          <i class=\\\"fa fa-search\\\" style=\\\"font-size:12px;\\\"></i>\\n                                </button>\\n                                <span class=\\\"slider round\\\"></span>\\n                            </div>\\n                        </div>\\n\\n                        <p style=\\n                        \\\"position: absolute;\\n                        font-family: Arial;\\n                        right: 150px;\\n                        top: 53px;\\\">Sort By</p>\\n                        \\n                          <div class=\\\"custom-select\\\">\\n                                <select [(ngModel)]=\\\"sorting\\\" (ngModelChange)='sort($event)'>\\n                                  <option value=\\\"0\\\" >Name</option>\\n                                  <option value=\\\"1\\\" >Price</option>\\n                                  <option value=\\\"2\\\" >Recently Added\\n                                  </option>\\n                                </select>\\n                          </div>\\n\\n                        <form #Primary=\\\"ngForm\\\">\\n                              <div style=\\\"overflow-x:auto;\\\" class=\\\"panel-body\\\" (click)=\\\"current_store = myclone(store)\\\" *ngFor=\\\"let store of stores\\\">\\n                                  <table>\\n                                      <tr>\\n                                        <th style=\\\"width: 50px; text-align: left;\\\"><img class=\\\"imageClass\\\" [src]=\\\"store.thumbnailUrl\\\"/></th>\\n                                        <th style=\\\"width: 380px; text-align: left; font-size:2vw\\\">\\n                                          Product {{store.id}}\\n                                          <tr style=\\\"font-size:1vw;\\\">\\n                                            Name : {{store.name}}\\n                                        </tr>\\n                                          <tr style=\\\"font-size:1vw;\\\">\\n                                              Description: {{store.description}}\\n                                          </tr>\\n                                          <tr style=\\\"font-size:1vw;\\\">\\n                                            Date: {{store.creationDate}}\\n                                        </tr>\\n                                        </th>\\n                                        <th style=\\\"text-align: right;\\\">\\n                                            <button class=\\\"btn\\\" id=\\\"btndelete\\\">\\n                                                Delete\\n                                            </button>\\n                                        </th>\\n                                      </tr>\\n                                  </table>\\n                            </div>\\n                        </form>\\n            </div>\\n      </div>\\n    </div>\\n      \\n      <div class=\\\"split right\\\">\\n        <form #info=\\\"ngForm\\\">\\n          <div class=\\\"panel1\\\">\\n                  <h3 style=\\\"font-size:3vw;\\\" class=\\\"panel-title\\\">Product {{current_store.id}} details</h3>\\n                              <p><img class=\\\"imageClass1\\\" style=\\\"height: 100px; width: 150px;\\\" [src]=\\\"current_store.url\\\"/></p>\\n                              <p style=\\\"font-size:1vw;\\\">Name</p>\\n                              <input style=\\\"width: 100%; height: 20px; border:3px solid rgb(0, 0, 0);\\\" type=\\\"text\\\" name=\\\"name\\\" \\n                                required [(ngModel)]=\\\"current_store.name\\\" name=\\\"name\\\"\\n                                #name=\\\"ngModel\\\">\\n                                <div\\n                                [hidden]=\\\"name.valid || name.pristine\\\"\\n                                class=\\\"alert\\\">\\n                                name is required\\n                              </div>\\n                              <p style=\\\"font-size:1vw;\\\" >Description</p>\\n                              <input style=\\\"width: 100%; height: 20px; border:3px solid rgb(0, 0, 0);\\\" type=\\\"text\\\" name=\\\"description\\\" \\n                                required [(ngModel)]=\\\"current_store.description\\\" name=\\\"description\\\"\\n                                #description=\\\"ngModel\\\">\\n                                <div\\n                                [hidden]=\\\"description.valid || description.pristine\\\"\\n                                class=\\\"alert\\\">\\n                                description is required\\n                              </div>\\n                              <p style=\\\"font-size:1vw;\\\">Price</p>\\n                              <input style=\\\"width: 100%; height: 20px; border:3px solid rgb(0, 0, 0);\\\" type=\\\"text\\\" name=\\\"price\\\" \\n                                required \\n                                pattern=\\\"^$|^([1-9][0-9]*)?\\\"\\n                                [(ngModel)]=\\\"current_store.price\\\" name=\\\"price\\\"\\n                                #price=\\\"ngModel\\\">\\n                                <div\\n                                [hidden]=\\\"price.valid || price.pristine\\\"\\n                                class=\\\"alert\\\">\\n                                price greater then 0 is required\\n                              </div>\\n                                  <div\\n                                name=\\\"id\\\" \\n                                [(ngModel)]=\\\"current_store.id\\\" name=\\\"id\\\"\\n                                #id=\\\"ngModel\\\">\\n                                  </div>\\n                              <p><button class=\\\"btn\\\" [disabled]=\\\"!info.valid\\\" (click)=\\\"SavedData(info)\\\" id=\\\"savebutton\\\">Save</button></p>\\n          </div>\\n        </form>\\n    </div> \"","import { Component, OnInit } from '@angular/core';\nimport { store } from '../models/store.models';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { NgForm, NgControl } from '@angular/forms';\nimport { splitAtColon } from '@angular/compiler/src/util';\nimport { StaticSymbolResolver } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-list-store',\n  templateUrl: './list-store.component.html',\n  styleUrls: ['./list-store.component.css']\n})\nexport class ListStoreComponent implements OnInit {\n  Flag=0;\n  sorting: number;\n  searching: string;\n  stores: store[] = [];\n  arr: number [];\n  tempstores: store[] = [];\n  num: 0;\n  date: Date;\n  current_store: store = {\n  id: 0,\n  name: '',\n  description: '',\n  price: 0,\n  creationDate: this.date,\n  thumbnailUrl: '',\n  url: ''\n  };\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.GetAll();\n    this.tempstores = this.stores;\n  }\n\n  GetAll(){\n    this.http.get<any>('https://msbit-exam-products-store.firebaseio.com/products.json'\n    ).subscribe(  result  => {\n      for(let i=0;i<result.length;i++){\n      this.stores.push(result[i]);\n      }\n    })\n  }\n\n  myclone(store){\n    return  Object.assign({}, store);\n  }\n\n  SavedData(storeForm: NgForm){\n    let Flag=0;\n    for(let i=0;i<this.stores.length;i++){\n      console.log(\"this.stores[i].name |\"+this.stores[i].name+\" $ storeForm.value.name |\"+storeForm.value.name);\n    if(this.stores[i].id==storeForm.value.id)\n    {\n      this.stores[i].name=storeForm.value.name;\n      this.stores[i].description=storeForm.value.description;\n      this.stores[i].price=storeForm.value.price;\n      alert(\"Success, Thank you for updating product: \"+this.stores[i].name);\n    }\n  }\n }\n\nsort(){\n  if(this.sorting == 0)\n  {\n    this.sortbyName();\n  }\n  if(this.sorting == 1)\n  {\n    this.sortbyPrice();\n  }\n  if(this.sorting == 2)\n  {\n    this.sortbyRecent();\n  }\n}\n\nsortbyPrice(){\nlet temp;\nfor(let i=0;i<this.stores.length;i++)\n{\n  for(let j=0;j<this.stores.length-1;j++)\n  {\n    if(this.stores[j].price>this.stores[j+1].price)\n    {\n     temp = this.stores[j+1];\n     this.stores[j+1] = this.stores[j];\n     this.stores[j] = temp;\n    }\n  }     \n}\n}\n\nsortbyName()\n{\n    this.stores.sort(function(a,b) {\n    var x = a.description.toLowerCase();\n    var y = b.description.toLowerCase();\n    return x<y?-1:x>y?1:0;\n  })\n}\n\nsortbyRecent(){\n  let temp;\n    for(let i=0;i<this.stores.length;i++)\n    {\n      for(let j=0;j<this.stores.length-1;j++)\n      {\n       if(this.stores[j+1].id>this.stores[j].id)\n        {\n         temp = this.stores[j+1];\n         this.stores[j+1] = this.stores[j];\n         this.stores[j] = temp;\n        }\n      }     \n    }\n}\n\nsearch(){\n    for(let i=0;i<this.stores.length;i++){\n        if(this.stores[i].description.indexOf(this.searching) == -1)\n        {\n          this.stores.splice(i,1);\n          i--;\n        }\n      }\n    }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  mystore works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mystore',\n  templateUrl: './mystore.component.html',\n  styleUrls: ['./mystore.component.css']\n})\nexport class MystoreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}