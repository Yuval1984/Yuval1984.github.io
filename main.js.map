{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/movies/alert.component.css","webpack:///./src/app/movies/alert.component.html","webpack:///./src/app/movies/alert.component.ts","webpack:///./src/app/movies/list-movies.component.css","webpack:///./src/app/movies/list-movies.component.html","webpack:///./src/app/movies/list-movies.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-list-movies></app-list-movies>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cinema';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n//import { RouterModule, Routes } from '@angular/core'; \nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ListMoviesComponent } from './movies/list-movies.component';\nimport { AlertComponent } from './movies/alert.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListMoviesComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"  .callout {\\r\\n    border-radius: 50px;\\r\\n    position: fixed;\\r\\n    bottom: 75px;\\r\\n    right: 400px;\\r\\n    margin-left: 100px;\\r\\n    max-width: 300px;\\r\\n  }\\r\\n  \\r\\n  .callout-header {\\r\\n    font-weight: bold;\\r\\n    padding: 45px 35px;\\r\\n    background-image: linear-gradient(rgb(255, 0, 0), rgb(155, 0, 0));\\r\\n    font-size: 35px;\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    color: rgb(255, 255, 255);\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .callout-container {\\r\\n    padding: 50px;\\r\\n    background-image: linear-gradient(rgb(155, 0, 0), rgb(50, 0, 0));\\r\\n    font-family: 'Times New Roman', Times, serif;\\r\\n    font-size: 30px;\\r\\n    color: rgb(255, 255, 255);\\r\\n    text-align: center;\\r\\n    \\r\\n  }\\r\\n  \\r\\n  .closebtn {\\r\\n    position: absolute;\\r\\n    top: 5px;\\r\\n    right: 15px;\\r\\n    color: white;\\r\\n    font-size: 30px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .closebtn:hover {\\r\\n    color: rgb(0, 0, 0);\\r\\n  }\\r\\n  \"","module.exports = \"<!--<div *ngIf=\\\"visible\\\">\\r\\n    <div class=\\\"alert_overlay\\\">\\r\\n        <div class=\\\"alert_content\\\">\\r\\n            <P class=\\\"{{alert_type}}\\\">{{text}}</P>\\r\\n            <span class=\\\"button\\\"><button class=\\\"btn\\\">OK</button></span>\\r\\n            <span class=\\\"closebtn\\\" onclick=\\\"this.parentElement.style.display='none';\\\">&times;</span> \\r\\n        </div>\\r\\n    </div>\\r\\n</div>-->\\r\\n<div *ngIf=\\\"visible\\\">\\r\\n    <div class=\\\"callout\\\">\\r\\n        <div class=\\\"callout-header\\\">Error Message</div>\\r\\n            <span class=\\\"closebtn\\\" (click)=\\\"hide()\\\">x</span>\\r\\n        <div class=\\\"callout-container\\\">\\r\\n        <p>\\r\\n          {{text}}\\r\\n        </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component,OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css']\r\n  })\r\n\r\n  export class AlertComponent implements OnInit {\r\n      text='';\r\n      visible = false;\r\n\r\n          ngOnInit(){\r\n        }\r\n\r\n        show(h){\r\n            this.text = h;\r\n            this.visible = true;\r\n           }\r\n\r\n           hide(){\r\n               this.visible = false;\r\n           }\r\n      }\r\n\r\n\r\n","module.exports = \".imageClass{\\r\\n    width:200px;\\r\\n    height:300px;\\r\\n}\\r\\n.colorClass1{\\r\\nbackground-color: cornflowerblue;\\r\\n}\\r\\n.colorClass2{\\r\\n    background-color: rgba(34, 202, 34, 0.637);\\r\\n}\\r\\n.colorClass3{\\r\\n    background-color: rgb(58, 57, 0);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n<div class=\\\"panel panel-primary\\\" *ngFor=\\\"let movie of movies\\\">\\n    <div class=\\\"panel-heading\\\" id=\\\"grad1\\\">\\n      <h3 class=\\\"panel-title\\\">{{movie.Title}}</h3>\\n    </div>\\n    \\n    <div class=\\\"panel-body bg-primary\\\">\\n      <div class=\\\"col-10\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-3\\\">\\n            <img class=\\\"imageClass\\\" [src]=\\\"movie.Poster\\\"/>\\n          </div>\\n          <div class=\\\"col-xs-8\\\">\\n  \\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                  <h3>Year</h3>\\n              </div>\\n              <div class=\\\"col-xs-6\\\">\\n                  <h3>{{movie.Year}}</h3>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                    <h3>Runtime</h3>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <h3>{{movie.Runtime}}</h3>\\n                </div>\\n              </div>\\n  \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-xs-6\\\">\\n                    <h3>Genre</h3>\\n                  </div>\\n                  <div class=\\\"col-xs-6\\\">\\n                    <h3>{{movie.Genre}}</h3>\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-xs-6\\\">\\n                      <h3>Director</h3>\\n                    </div>\\n                    <div class=\\\"col-xs-6\\\">\\n                      <h3>{{movie.Director}}</h3>\\n                    </div>\\n                  </div>\\n          </div>\\n  \\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"panel-footer\\\" id=\\\"grad2\\\"> \\n          <div class=\\\"btn-group btn-group-lg\\\">\\n              <button class=\\\"btn btn-success\\\" ion-item *ngIf=\\\"this.movie==movies[movies.length-1]\\\" (click)=\\\"current_movie = myclone(movie)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal3\\\">\\n                  <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Add Movie \\n              </button>\\n              <button class=\\\"btn btn-warning\\\" (click)=\\\"current_movie = myclone(movie)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal1\\\">\\n              <span class=\\\"glyphicon glyphicon-pencil\\\"></span> Edit Movie \\n            </button>\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"current_movie = myclone(movie)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal2\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span> Delete Movie\\n              </button>\\n          </div>\\n        </div>\\n</div>\\n <!--ion-item *ngIf=\\\"this.movie==movies[movies.length-1]\\\">-->\\n<form #EditForm=\\\"ngForm\\\">\\n  <div class=\\\"modal fade\\\" id=\\\"myModal1\\\" role=\\\"dialog\\\">\\n      <div class=\\\"modal-dialog\\\">\\n      \\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header p-3 mb-2 bg-primary text-white\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n            <h4 class=\\\"modal-title\\\">Edit movie: {{current_movie.Title}}</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Y\\\">Year</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Y\\\" \\n                  required\\n                  minlength=\\\"4\\\" maxlength=\\\"4\\\" pattern=\\\"^$|^([0-9]|[2][0][0-1][0-8])?\\\"\\n                    [(ngModel)]=\\\"current_movie.Year\\\" name=\\\"Y\\\"\\n                    #Y=\\\"ngModel\\\">\\n                    <div\\n                    [hidden]=\\\"Y.valid || Y.pristine\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                    Valid Year is required\\n                  </div>\\n                  <div *ngIf=\\\"Y.errors?.minlength\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                    Year must be at least 4 digits long\\n                  </div>\\n              </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Runtime\\\">Runtime</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Runtime\\\" \\n                  required\\n                    [(ngModel)]=\\\"current_movie.Runtime\\\" name=\\\"Runtime\\\"\\n                    #Runtime=\\\"ngModel\\\">\\n                    <div\\n                    [hidden]=\\\"Runtime.valid || Runtime.pristine\\\"\\n                    class=\\\"alert alert-danger\\\">\\n                    Runtime is required\\n                  </div>\\n              </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Genre\\\">Genre</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Genre\\\" \\n                required\\n                  [(ngModel)]=\\\"current_movie.Genre\\\" name=\\\"Genre\\\"\\n                  #Genre=\\\"ngModel\\\">\\n                  <div\\n                  [hidden]=\\\"Genre.valid || Genre.pristine\\\"\\n                  class=\\\"alert alert-danger\\\">\\n                  Genre is required\\n                 </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"Director\\\">Director</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Director\\\" \\n                required\\n                  [(ngModel)]=\\\"current_movie.Director\\\" name=\\\"Director\\\"\\n                  #Director=\\\"ngModel\\\">\\n                  <div\\n                  [hidden]=\\\"Director.valid || Director.pristine\\\"\\n                  class=\\\"alert alert-danger\\\">\\n                  Director is required\\n                 </div>\\n            </div>\\n        </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"submit\\\"  class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveEmployee(EditForm)\\\">\\n                <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save Changes \\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n<!--[disabled]=\\\"!EditForm.valid\\\"-->\\n  <form #AddForm=\\\"ngForm\\\">\\n      <div class=\\\"modal fade\\\" id=\\\"myModal3\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header p-3 mb-2 bg-primary text-white\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Add new Movie</h4>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Title\\\">Title</label>\\n                  <input type=\\\"title\\\" class=\\\"form-control\\\" id=\\\"Title\\\" \\n                    required \\n                      [(ngModel)]=\\\"k\\\" name=\\\"Title\\\"\\n                      #Title=\\\"ngModel\\\">\\n                      <div\\n                      [hidden]=\\\"Title.valid || Title.pristine\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      Title is required\\n                      </div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"Year\\\">Year</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"Year\\\"\\n                    required \\n                    minlength=\\\"4\\\" maxlength=\\\"4\\\" pattern=\\\"^$|^([0-9]|[2][0][0-1][0-8])?\\\"\\n                      [(ngModel)]=\\\"r\\\" name=\\\"Year\\\"\\n                      #Year=\\\"ngModel\\\">\\n                      <div\\n                      [hidden]=\\\"Year.valid || Year.pristine\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                      Valid Year is required\\n                      </div>\\n                      <div *ngIf=\\\"Year.errors?.minlength\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                        Year must be at least 4 digits long\\n                      </div>\\n                </div>\\n            </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"AddNewMovie(AddForm)\\\">\\n                    <span class=\\\"glyphicon glyphicon-ok\\\"></span> Save Changes \\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n  \\n  <form #DeleteForm=\\\"ngForm\\\">\\n  <div class=\\\"modal fade\\\" id=\\\"myModal2\\\" role=\\\"dialog\\\">\\n      <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-footer\\\" id=\\\"grad3\\\">\\n              <h4 class=\\\"modal-title\\\">Delete Movie : {{current_movie.Title}} ?</h4>\\n            <br><br>\\n            <button type=\\\"submit\\\" value=\\\"OK\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteMovie(DeleteForm)\\\" class=\\\"btn btn-danger\\\">\\n                <span class=\\\"glyphicon glyphicon-remove\\\"></span> OK \\n              </button>\\n              <button type=\\\"submit\\\" value=\\\"Cancel\\\" class=\\\"btn btn-success pull-down\\\" data-dismiss=\\\"modal\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove\\\"></span> Cancel\\n                </button>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </form>\\n  \\n<app-alert></app-alert>\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { movie } from '../models/movie.model';\nimport { NgForm, NgControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { AngularWaitBarrier } from 'blocking-proxy/built/lib/angular_wait_barrier';\nimport * as jQuery from 'jquery';\nimport { Container } from '@angular/compiler/src/i18n/i18n_ast';\nimport { open } from 'fs';\nimport { AlertComponent } from './alert.component';\n\n@Component({\n  selector: 'app-list-movies',\n  templateUrl: './list-movies.component.html',\n  styleUrls: ['./list-movies.component.css'],\n  })\nexport class ListMoviesComponent implements OnInit {\n  movies: movie[] = [];\n  id: 0;\n  current_movie: movie = {\n    id: this.id+1,\n    Title: '',\n    Year: '',\n    Runtime: '',\n    Genre: '',\n    Director: '',\n    Poster: ''\n  };\n  \n\n  constructor(private http: HttpClient) \n  {\n  }\n \n  ngOnInit(){\n    this.GetMovieData()\n  }\n  OnEdit(){\n  }\n\n  @ViewChild(AlertComponent)\n    private modal : AlertComponent;\n\n  myclone(movie){\n    return  Object.assign({}, movie);\n  }\n\n\n\n  saveEmployee(movieForm: NgForm): void {\n    let a=1000 as any;\n    let b=2018 as any;\n    let y=\"Input for Year has wrong value\";\n    let g=\"Input for Genre has wrong value\";\n    let r=\"Input for Runtime has wrong value\";\n    let d=\"Input for Director has wrong value\";\n    let stringarr = \"Wrong Input in \" as any;\n    \n    if(this.current_movie.Year < a || this.current_movie.Year > b || this.current_movie.Year == \"\")\n        stringarr=stringarr+\",Year \";\n    if(this.current_movie.Genre == \"\")\n        stringarr=stringarr+\",Genre \";\n    if(this.current_movie.Runtime == \"\")\n        stringarr=stringarr+\",Runtime \";\n    if(this.current_movie.Director == \"\")\n        stringarr=stringarr+\",Director \";\n    if(stringarr != \"Wrong Input in \")\n        this.modal.show(stringarr);\n\n    else{\n    for(let i = 0; i < this.movies.length; i++ )\n      if( this.movies[i].Title == this.current_movie.Title )\n      {\n        this.movies[i] = this.myclone(this.current_movie);\n        break;\n      }\n    }\n  }\n\n  deleteMovie(DeleteForm: NgForm): void {\n    for(let i = 0; i < this.movies.length; i++ )\n      if( this.movies[i].Title == this.current_movie.Title )\n      {\n        this.movies.splice(i,1);\n        break;\n      }\n    }\n\n    GetMovieData(){\n      let i = 0;\n      let moviearr =[\n        \"The Predator&2018\",\"Ant-Man and the Wasp&2018\",\"ready player one&2018\", \"Justice League&2017\", \"Avengers&2012\"\n      ]\n      for(let i=0;i<moviearr.length;i++)\n      {\n      this.http.get<any>('https://www.omdbapi.com/?t=' + moviearr[i] +\"&apikey=4c039a0f\"\n      ).subscribe(  result  => {\n        this.movies.push(result);\n      })\n    }\n    }\n    \n    GetMovieData2(T,Y){\n      this.http.get<any>('https://www.omdbapi.com/?t='+T+\"&y=\"+Y+\"&apikey=4c039a0f\"\n      ).subscribe(  result  => {\n        let s=\"Same movie already exists, Movie wasnt added to list\";\n        let t=\"Movie wasnt found try searching again\";\n        let Flag=0;\n        if(result.Response!=\"False\")\n        {\n          for(let i=0;i<this.movies.length;i++)\n          {\n            if( this.movies[i].Title == result.Title )\n            {\n              Flag=1;\n            }\n          }\n          if(Flag==0)\n            this.movies.push(result);\n            else{\n            this.modal.show(s);\n            }\n        }\n        else\n        {\n        this.modal.show(t);\n        }\n      })\n      \n    }\n    AddNewMovie(movieForm: NgForm) {\n        this.GetMovieData2(movieForm.value.Title,movieForm.value.Year);\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}